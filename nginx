global CLI
nginx -s reload
nginx -t -c /etc/nginx/nginx.conf

** if there are many location directives, it will stop at the first match


server {
        listen 80;
        server_name 127.0.0.1 localhost;
        root /etc/nginx/html;

        location /app1/ {
                index index.html;
        }

        location  /app2/ {
                index home.html;
        }
#        location ~ \.(png|jpg|jpeg)$ {
#                expires max;
#        }

#        location ~* \.(png|jpg|jpeg)$ {
#                expires 10d;
#        }
        location ~* \.(jpg|jpeg)$ {
                root /etc/nginx/html/common;
        }
        location ~* \.(png|jpg|jpeg)$ {
                root /etc/nginx/html/common;
                try_files $uri $uri/ /nginx.png =404;
        }
}

location ∼* \.(png)$ {
        root /etc/nginx/html/common;
        try_files $uri $uri/ /nginx.png @mylocation;
}

location @mylocation{
        ...
        #do something here
        ...
}

Change directory (common to vendor_assets)
server {
        listen 80;
        server_name 127.0.0.1 localhost;
        root /etc/nginx/html;

        location /common/ {
                rewrite ^(/common/)(.*) /vendor_assets/$2 last;
        }
}

Error handle
It can be used inside http, server, location, and if blocks.
error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

DENY ACCESS TO ANY SPECIFIC LOCATION
server {
        listen 80;
        server_name 127.0.0.1 localhost;
        root /etc/nginx/html;

        location /vendor_assets/ {
                deny all;
        }
}

PROXY THE REQUESTS TO APACHE
location ∼ \.php$ {
        proxy_pass   http://127.0.0.1;
    }
    
PROXY THE REQUESTS TO FASTCGI
location ∼ \.php$ {
        root           html;
        fastcgi_pass   127.0.0.1:9000;
        fastcgi_index  index.php;
        fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        include        fastcgi_params;
    }


## Nginx Module
- Nginx is modular
- Nginx modules can be split into five different catagories
- Out-of-Box Modules
Nginx source has some modules that are included by default and they can be enabled or disabled during compile 
time using --with or --without options
